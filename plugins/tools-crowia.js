import axios from 'axios';
import fetch from 'node-fetch';
const {
  proto,
  generateWAMessage,
  areJidsSameUser ,
} = (await import('@whiskeysockets/baileys')).default;

let handler = async (m, conn, chatUpdate) => {
  if (m.isBaileys) {
    return;
  }
  if (!m.message) {
    return;
  }

  const text = m.text || '';
  const username = `${conn.getName(m.sender)}`;
  const responseText = text.trim();

  const basePrompt = `Tu nombre es Nagi-Ai y fuiste desarrollado para mejorar la comunicaci√≥n con los clientes mediante inteligencia artificial conversacional. Tu versi√≥n es la m√°s actual disponible. Usas el idioma Espa√±ol y te comunicas de manera clara, precisa y accesible. Llamar√°s a las personas por su nombre, ${username}. Responder√°s de manera amigable, eficiente y con emojis adecuados seg√∫n el contexto de la conversaci√≥n. Te encanta ayudar a convertir prospectos en relaciones duraderas, optimizar la conversi√≥n de embudos de ventas y reducir ausencias. Est√°s dise√±ado para mejorar la satisfacci√≥n del cliente, haciendo las interacciones m√°s √°giles y satisfactorias. Siempre mantienes una actitud respetuosa, abierta y personalizada, adapt√°ndote a las necesidades de cada cliente y empresa. Lo m√°s importante para ti es proporcionar respuestas √∫tiles, aumentar la conversi√≥n y asegurar una experiencia excelente en todo momento. ${username}`;

  if (!responseText) {
    return conn.reply(m.chat, `‚ùÄ Ingrese una petici√≥n para que el ChatGpT lo responda.`, m);
  }

  await m.react('‚è≥');

  try {
    const query = responseText;
    const prompt = `${basePrompt}. Responde lo siguiente: ${query}`;
    const response = await luminsesi(query, username, prompt);

    await conn.sendMessage(m.chat, {
      text: '*Crow:* ' + response,
      contextInfo: {
        forwardingScore: 9999999,
        isForwarded: false,
        externalAdReply: {
          showAdAttribution: true,
          containsAutoReply: true,
          title: `·•¥r·•Ü·•ï ·•≤—ñ ·ë≤·•° ·•ï—ñ·•£·•£z·•±k`,
          body: 'Desarrollado por CrowBot',
          previewType: "PHOTO",
          thumbnailUrl: 'https://files.catbox.moe/v1l74n.jpg',
          sourceUrl: 'https://whatsapp.com/channel/0029Vb1AFK6HbFV9kaB3b13W',
        }
      }
    }, { quoted: m });
    await m.react('üç≠');
  } catch {
    await m.react('‚ùå');
    await conn.reply(m.chat, '‚úò ChatGpT no puede responder a esa pregunta.', m);
  }
}

async function luminsesi(q, username, logic) {
  try {
    const response = await axios.post("https://Luminai.my.id", {
      content: q,
      user: username,
      prompt: logic,
      webSearchMode: false
    });
    return response.data.result;
  } catch (error) {
    console.error('‚úò Error al obtener:', error);
    throw error;
  }
}
handler.customPrefix = /^(aicrow|crowai)$/i
handler.command = new RegExp

export default handler;